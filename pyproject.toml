[build-system]
requires = ["setuptools>=68", "wheel", "ninja", "torch", "numpy"]
build-backend = "setuptools.build_meta"

[project]
name = "convlogic"
version = "1.0.0"
description = "Convolutional Differentiable Logic Gate Network"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Lukas Korinek"}
]
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "torch==2.8.0",
    "torchvision==0.23.0",
    "numpy>=1.24.0",
    "tqdm==4.67.1", 
    "scikit-learn==1.7.2",
    "matplotlib==3.10.6",
    "wandb==0.22.1",
    "lightning==2.5.5",
    "hydra-core==1.3.2",
]

[project.optional-dependencies]
dev = [
    "pre-commit==4.3.0",
    "pytest==8.4.2",
    "coverage==7.10.7",
    "pytest-cov==4.1.0",
    "ruff==0.13.2",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 120
target-version = "py311"
src = ["src"]
extend-exclude = ["build", "dist"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
]
ignore = [
    "N812",  # lowercase imported as non-lowercase
    "F401",  # imported but unused
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # Allow assert in tests

[tool.ruff.lint.isort]
known-first-party = ["convlogic"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--strict-config",
    "--cov=convlogic",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true

[tool.coverage.report]
omit = ["tests/*"]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
